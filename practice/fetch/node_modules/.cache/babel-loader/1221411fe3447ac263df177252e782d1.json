{"ast":null,"code":"var _jsxFileName = \"/Users/lolfill/Documents/practice/fetch/src/catFacts.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './catFacts.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CatFacts = props => {\n  _s();\n\n  useEffect(() => {}, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: facts.map((e, i) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: e\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 29\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CatFacts, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = CatFacts;\n\nvar _c;\n\n$RefreshReg$(_c, \"CatFacts\");","map":{"version":3,"sources":["/Users/lolfill/Documents/practice/fetch/src/catFacts.jsx"],"names":["React","useEffect","useState","CatFacts","props","facts","map","e","i"],"mappings":";;;AACA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAO,gBAAP;;AAEA,OAAO,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAGjCH,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,EAEP,EAFO,CAAT;AAMA,sBACE;AAAA,2BACE;AAAA,gBAAKI,KAAK,CAACC,GAAN,CAAU,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACvB,4BAAQ;AAAA,iCAAY;AAAA,sBAAID;AAAJ;AAAA;AAAA;AAAA;AAAA;AAAZ,WAASC,CAAT;AAAA;AAAA;AAAA;AAAA,gBAAR;AACD,OAFI;AAAL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAjBM;;GAAML,Q;;KAAAA,Q","sourcesContent":["\nimport React, {useEffect, useState} from 'react'\nimport './catFacts.css'\n\nexport const CatFacts = (props) => {\n  \n\n  useEffect(() => {\n    \n  },[])\n\n \n \n  return (\n    <div>\n      <ul>{facts.map((e, i) => {\n        return (<li key={i}><p>{e}</p></li>)\n      })}\n      </ul>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}