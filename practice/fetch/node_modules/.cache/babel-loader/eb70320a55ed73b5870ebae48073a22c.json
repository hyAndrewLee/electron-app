{"ast":null,"code":"var _jsxFileName = \"/Users/lolfill/Documents/practice/fetch/src/catFacts.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './catFacts.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CatFacts = () => {\n  _s();\n\n  const [facts, setFacts] = useState([]);\n  useEffect(() => {\n    update();\n  }, []);\n\n  const update = async () => {\n    try {\n      const newFact = await fetch('https://cat-fact.herokuapp.com/facts/random');\n      const fact = await newFact.text;\n      return fact;\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"btn\",\n      onClick: () => /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: facts.map((entry, i) => {\n          /*#__PURE__*/\n          _jsxDEV(\"li\", {\n            children: entry\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 9\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 39\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CatFacts, \"00cML/e5WsoY7CM/Z1LqoA34S9g=\");\n\n_c = CatFacts;\n\nvar _c;\n\n$RefreshReg$(_c, \"CatFacts\");","map":{"version":3,"sources":["/Users/lolfill/Documents/practice/fetch/src/catFacts.jsx"],"names":["React","useEffect","useState","CatFacts","facts","setFacts","update","newFact","fetch","fact","text","err","console","error","map","entry","i"],"mappings":";;;AACA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAO,gBAAP;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,MAAM;AACP,GAFQ,EAEP,EAFO,CAAT;;AAIA,QAAMA,MAAM,GAAG,YAAY;AACzB,QAAI;AACF,YAAMC,OAAO,GAAG,MAAMC,KAAK,CAAC,6CAAD,CAA3B;AACA,YAAMC,IAAI,GAAG,MAAMF,OAAO,CAACG,IAA3B;AAEA,aAAOD,IAAP;AACD,KALD,CAKE,OAAOE,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD;AACF,GATD;;AAWA,sBACE;AAAA,2BACE;AAAQ,MAAA,EAAE,EAAC,KAAX;AAAiB,MAAA,OAAO,EAAE,mBAAM;AAAA,kBAAKP,KAAK,CAACU,GAAN,CAAU,CAACC,KAAD,EAAQC,CAAR,KAAc;AAC3D;AAAA;AAAA,sBAAaD;AAAb,aAASC,CAAT;AAAA;AAAA;AAAA;AAAA;AACD,SAFoC;AAAL;AAAA;AAAA;AAAA;AAAA;AAAhC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CA3BM;;GAAMb,Q;;KAAAA,Q","sourcesContent":["\nimport React, {useEffect, useState} from 'react'\nimport './catFacts.css'\n\nexport const CatFacts = () => {\n  const [facts, setFacts] = useState([]);\n\n  useEffect(() => {\n    update()\n  },[])\n\n  const update = async () => {\n    try {\n      const newFact = await fetch('https://cat-fact.herokuapp.com/facts/random');\n      const fact = await newFact.text;\n\n      return fact;\n    } catch (err) {\n      console.error(err);\n    }\n  }\n \n  return (\n    <div>\n      <button id='btn' onClick={() => <ul>{facts.map((entry, i) => {\n        <li key={i}>{entry}</li>\n      })}\n      </ul>}></button>\n      \n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}