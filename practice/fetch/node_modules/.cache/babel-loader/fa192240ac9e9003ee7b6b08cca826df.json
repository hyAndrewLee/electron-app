{"ast":null,"code":"var _jsxFileName = \"/Users/lolfill/Documents/practice/fetch/src/catFacts.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './catFacts.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CatFacts = () => {\n  _s();\n\n  const [facts, setFacts] = useState([]);\n  useEffect(() => {\n    const getFacts = async () => {\n      const data = await fetch('https://cat-fact.herokuapp.com/facts/random').then(res => res.json()).then(data => data.text).catch(err => {\n        console.error(err);\n      });\n      setFacts([...facts, data]);\n    };\n\n    getFacts();\n  }, [props]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: facts.map((e, i) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: e\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 29\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CatFacts, \"00cML/e5WsoY7CM/Z1LqoA34S9g=\");\n\n_c = CatFacts;\n\nvar _c;\n\n$RefreshReg$(_c, \"CatFacts\");","map":{"version":3,"sources":["/Users/lolfill/Documents/practice/fetch/src/catFacts.jsx"],"names":["React","useEffect","useState","CatFacts","facts","setFacts","getFacts","data","fetch","then","res","json","text","catch","err","console","error","props","map","e","i"],"mappings":";;;AACA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAO,gBAAP;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMK,QAAQ,GAAG,YAAY;AAC3B,YAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,6CAAD,CAAL,CAClBC,IADkB,CACbC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADM,EAElBF,IAFkB,CAEbF,IAAI,IAAIA,IAAI,CAACK,IAFA,EAGlBC,KAHkB,CAGXC,GAAD,IAAS;AAACC,QAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AAAmB,OAHjB,CAAnB;AAKAT,MAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWG,IAAX,CAAD,CAAR;AACD,KAPD;;AAQAD,IAAAA,QAAQ;AACT,GAVQ,EAUP,CAACW,KAAD,CAVO,CAAT;AAcA,sBACE;AAAA,2BACE;AAAA,gBAAKb,KAAK,CAACc,GAAN,CAAU,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACvB,4BAAQ;AAAA,iCAAY;AAAA,sBAAID;AAAJ;AAAA;AAAA;AAAA;AAAA;AAAZ,WAASC,CAAT;AAAA;AAAA;AAAA;AAAA,gBAAR;AACD,OAFI;AAAL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAzBM;;GAAMjB,Q;;KAAAA,Q","sourcesContent":["\nimport React, {useEffect, useState} from 'react'\nimport './catFacts.css'\n\nexport const CatFacts = () => {\n  const [facts, setFacts] = useState([]);\n\n  useEffect(() => {\n    const getFacts = async () => {\n      const data = await fetch('https://cat-fact.herokuapp.com/facts/random')\n      .then(res => res.json())\n      .then(data => data.text)\n      .catch((err) => {console.error(err)})\n\n      setFacts([...facts, data]);\n    }\n    getFacts()\n  },[props])\n\n \n \n  return (\n    <div>\n      <ul>{facts.map((e, i) => {\n        return (<li key={i}><p>{e}</p></li>)\n      })}\n      </ul>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}