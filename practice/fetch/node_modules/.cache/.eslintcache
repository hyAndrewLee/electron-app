[{"/Users/lolfill/Documents/practice/fetch/src/index.js":"1","/Users/lolfill/Documents/practice/fetch/src/App.js":"2","/Users/lolfill/Documents/practice/fetch/src/reportWebVitals.js":"3","/Users/lolfill/Documents/practice/fetch/src/catFacts.jsx":"4"},{"size":500,"mtime":1646244733574,"results":"5","hashOfConfig":"6"},{"size":345,"mtime":1646262080149,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1646244733575,"results":"8","hashOfConfig":"6"},{"size":623,"mtime":1646261938725,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cx8vho",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"24"},"/Users/lolfill/Documents/practice/fetch/src/index.js",[],[],"/Users/lolfill/Documents/practice/fetch/src/App.js",["25"],[],"import { CatFacts } from \"./catFacts\";\nimport React, {useState, useEffect} from 'react';\n\nconst App = () => {\n  \n  const [counter, setCounter] = useState(0);\n\n  return (\n    <div className='app'>\n      <button id='btn' onClick={()=>setCounter(counter + 1)}></button>\n      <CatFacts counterProp={counter}/>\n    </div>\n  )\n}\n\nexport default App;\n","/Users/lolfill/Documents/practice/fetch/src/reportWebVitals.js",[],[],"/Users/lolfill/Documents/practice/fetch/src/catFacts.jsx",["26"],[],"\nimport React, {useEffect, useState} from 'react'\nimport './catFacts.css'\n\nexport const CatFacts = (props) => {\n  const [facts, setFacts] = useState([]);\n\n  useEffect(() => {\n    const getFacts = async () => {\n      const data = await fetch('https://cat-fact.herokuapp.com/facts/random')\n      .then(res => res.json())\n      .then(data => data.text)\n      .catch((err) => {console.error(err)})\n\n      setFacts([...facts, data]);\n    }\n    getFacts()\n\n    \n  },[props.counterProp])\n\n \n \n  return (\n    <div>\n      <ul>{facts.map((e, i) => {\n        return (<li key={i}><p>{e}</p></li>)\n      })}\n      </ul>\n    </div>\n  )\n}",["27","28"],{"ruleId":"29","severity":1,"message":"30","line":2,"column":26,"nodeType":"31","messageId":"32","endLine":2,"endColumn":35},{"ruleId":"33","severity":1,"message":"34","line":20,"column":5,"nodeType":"35","endLine":20,"endColumn":24,"suggestions":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'facts'. Either include it or remove the dependency array. You can also do a functional update 'setFacts(f => ...)' if you only need 'facts' in the 'setFacts' call.","ArrayExpression",["41"],"no-native-reassign",["42"],"no-negated-in-lhs",["43"],{"desc":"44","fix":"45"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [facts, props.counterProp]",{"range":"46","text":"47"},[460,479],"[facts, props.counterProp]"]